service: offcourse
provider:
  name: aws
  cfLogs: true
  runtime: nodejs4.3
  environment:
    serverlessStage: ${self:custom.envVars.serverlessStage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        -  dynamodb:GetItem
        -  dynamodb:BatchGetItem
        -  dynamodb:PutItem
        -  dynamodb:query
        -  dynamodb:Scan
        -  s3:PutObject
        -  s3:GetObject
        -  kinesis:GetRecords
        -  kinesis:GetShardIterator
        -  kinesis:PutRecords
        -  kinesis:DescribeStream
        -  kinesis:ListStreams
      Resource: "*" 


custom:
  kinesisBase: arn:aws:kinesis:us-east-1:774182433398:stream
  dynamodbBase: arn:aws:dynamodb:us-east-1:774182433398:table
  envVars: ${file(./envvars.yml):EnvVars}

functions:
  command:
    handler: functions/index.command
    environment:
      rawCoursesBucket: ${self:service}-raw-courses-${opt:stage}
      rawUsersBucket: ${self:service}-raw-users-${opt:stage}
      identitiesTable: "identities-${opt:stage}"
      rawReposStream: "raw-github-repos-${opt:stage}"
    events:
      - http:
          path: command
          method: post
          cors: true
          integration: lambda
          authorizer: authorize

  augment:
    handler: functions/index.augment
    environment:
      coursesStream:  "courses-${opt:stage}"
      bookmarksTable: "bookmarks-${opt:stage}"
      resourcesTable: "resources-${opt:stage}"
      coursesTable:   "courses-${opt:stage}"
    events:
      - stream:
          arn: ${self:custom.dynamodbBase}/resources-${opt:stage}/stream/2016-11-01T20:58:43.405

  query:
    handler: functions/index.query
    environment:
      elasticsearchEndpoint: ${self:custom.envVars.elasticsearchEndpoint}
      resourcesTable: "resources-${opt:stage}"
    events:
      - http:
          path: query
          method: post
          cors: true
          integration: lambda

  authorize:
    handler: functions/index.authorize
    environment:
     identitiesTable: "identities-${opt:stage}"
     authSecret: ${self:custom.envVars.auth0Secret}

  retrieve:
    handler: functions/index.retrieve
    environment:
      rawUsersStream: "raw-users-${opt:stage}"
      coursesStream: "courses-${opt:stage}"
      githubCoursesStream: "github-courses-${opt:stage}"
      githubReposStream: "github-repos-${opt:stage}"
      rawResourcesStream: "raw-resources-${opt:stage}"
      errorsStream: "errors-${opt:stage}"
    events:
      - s3:
          bucket: ${self:service}-resources-${opt:stage}
          event:  s3:ObjectCreated:*
      - s3:
          bucket: ${self:service}-raw-users-${opt:stage}
          event:  s3:ObjectCreated:*
      - s3:
          bucket: ${self:service}-raw-courses-${opt:stage}
          event:  s3:ObjectCreated:*
      - s3:
          bucket: ${self:service}-github-repos-${opt:stage}
          event:  s3:ObjectCreated:*
      - s3:
          bucket: ${self:service}-github-courses-${opt:stage}
          event:  s3:ObjectCreated:*

  transform:
    handler: functions/index.transform
    environment:
      bookmarksStream: "bookmarks-${opt:stage}"
      coursesStream: "courses-${opt:stage}"
      rawGithubCoursesStream: "raw-github-courses-${opt:stage}"
      resourcesStream: "resources-${opt:stage}"
      profilesStream: "profiles-${opt:stage}"
      rawPortraitsStream: "raw-portraits-${opt:stage}"
      identitiesStream: "identities-${opt:stage}"
      errorsStream: "errors-${opt:stage}"
    events:
      - stream: 
          arn: ${self:custom.kinesisBase}/raw-resources-${opt:stage}
          startingPosition: LATEST
      - stream: 
          arn: ${self:custom.kinesisBase}/raw-users-${opt:stage}
          startingPosition: LATEST
      - stream: 
          arn: ${self:custom.kinesisBase}/courses-${opt:stage}
          startingPosition: LATEST
      - stream:
          arn: ${self:custom.kinesisBase}/github-repos-${opt:stage}
          startingPosition: LATEST
      - stream:
          arn: ${self:custom.kinesisBase}/github-courses-${opt:stage}
          startingPosition: LATEST

  save:
    handler: functions/index.save
    timeout: 20
    environment:
      identitiesTable: "identities-${opt:stage}"
      coursesTable:    "courses-${opt:stage}"
      resourcesTable:  "resources-${opt:stage}"
      profilesTable:   "profiles-${opt:stage}"
      bookmarksTable:  "bookmarks-${opt:stage}"
    events:
      - stream: 
          arn: ${self:custom.kinesisBase}/profiles-${opt:stage}
          startingPosition: LATEST
      - stream: 
          arn: ${self:custom.kinesisBase}/identities-${opt:stage}
          startingPosition: LATEST
      - stream: 
          arn: ${self:custom.kinesisBase}/courses-${opt:stage}
          startingPosition: LATEST
      - stream: 
          arn: ${self:custom.kinesisBase}/bookmarks-${opt:stage}
          startingPosition: LATEST
      - stream: 
          arn: ${self:custom.kinesisBase}/resources-${opt:stage}
          startingPosition: LATEST

  download:
    handler: functions/index.download
    environment:
      embedlyApiKey:       ${self:custom.envVars.embedlyApiKey}
      githubApiKey:        ${self:custom.envVars.githubApiKey}
      resourcesBucket:     ${self:service}-resources-${opt:stage}
      githubCoursesBucket: ${self:service}-github-courses-${opt:stage}
      githubReposBucket:   ${self:service}-github-repos-${opt:stage}
      assetsBucket:        ${self:service}-assets-${opt:stage}
    events:
      - stream: 
          arn: ${self:custom.kinesisBase}/bookmarks-${opt:stage}
          startingPosition: LATEST
      - stream:
          arn: ${self:custom.kinesisBase}/raw-github-repos-${opt:stage}
          startingPosition: LATEST
      - stream:
          arn: ${self:custom.kinesisBase}/raw-github-courses-${opt:stage}
          startingPosition: LATEST
      - stream:
          arn: ${self:custom.kinesisBase}/raw-portraits-${opt:stage}
          startingPosition: LATEST

  index:
    handler: functions/index.index
    environment:
      elasticsearchEndpoint: ${self:custom.envVars.elasticsearchEndpoint}
    events:
      - stream:
          arn: ${self:custom.dynamodbBase}/resources-${opt:stage}/stream/2016-11-01T20:58:43.405
      - stream:
          arn: ${self:custom.dynamodbBase}/courses-${opt:stage}/stream/2016-11-09T21:48:50.668
      - stream:
          arn: ${self:custom.dynamodbBase}/profiles-${opt:stage}/stream/2016-11-09T21:48:51.163

resources:
  Resources:
    AccessBucketsRole:      ${file(./cloudformation/roles.yml):AccessBucketsRole}  
    ViewAssetsPolicy:       ${file(./cloudformation/roles.yml):ViewAssetsPolicy}  

    RawUsersStream:         ${file(./cloudformation/streams.yml):RawUsersStream}
    RawPortraitsStream:     ${file(./cloudformation/streams.yml):RawPortraitsStream}
    RawResourcesStream:     ${file(./cloudformation/streams.yml):RawResourcesStream}
    RawCoursesStream:       ${file(./cloudformation/streams.yml):RawCoursesStream}
    RawGithubCoursesStream: ${file(./cloudformation/streams.yml):RawGithubCoursesStream}
    RawGithubReposStream:   ${file(./cloudformation/streams.yml):RawGithubReposStream}

    ErrorsStream:           ${file(./cloudformation/streams.yml):ErrorsStream}
    PortraitsStream:        ${file(./cloudformation/streams.yml):PortraitsStream}
    ProfilesStream:         ${file(./cloudformation/streams.yml):ProfilesStream}
    IdentitiesStream:       ${file(./cloudformation/streams.yml):IdentitiesStream}
    CoursesStream:          ${file(./cloudformation/streams.yml):CoursesStream}
    BookmarksStream:        ${file(./cloudformation/streams.yml):BookmarksStream}
    ResourcesStream:        ${file(./cloudformation/streams.yml):ResourcesStream}
    GithubReposStream:      ${file(./cloudformation/streams.yml):GithubReposStream}
    GithubCoursesStream:    ${file(./cloudformation/streams.yml):GithubCoursesStream}
    
    ResourcesTable:         ${file(./cloudformation/tables.yml):ResourcesTable}
    ProfilesTable:          ${file(./cloudformation/tables.yml):ProfilesTable}
    CoursesTable:           ${file(./cloudformation/tables.yml):CoursesTable}
    BookmarksTable:         ${file(./cloudformation/tables.yml):BookmarksTable}
    IdentitiesTable:        ${file(./cloudformation/tables.yml):IdentitiesTable}

    AssetsBucket:           ${file(./cloudformation/buckets.yml):AssetsBucket}

    SearchCluster:          ${file(./cloudformation/search-clusters.yml):SearchCluster}
